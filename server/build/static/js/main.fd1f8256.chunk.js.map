{"version":3,"sources":["cookie.js","components/Home.jsx","components/Auth.jsx","components/Register.jsx","components/Login.jsx","components/MainLogin.jsx","components/NotFound.jsx","components/Token.jsx","Routes.jsx","RouterRoot.jsx","App.jsx","serviceWorker.js","index.js"],"names":["setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toGMTString","document","cookie","getCookie","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","deleteCookie","Home","logout","window","location","href","react_default","a","createElement","Link","to","onClick","this","React","Component","Auth","query","qs","parse","search","client_id","state","code","scope","redirect_url","alert","forLogin","stringify","concat","parsed","user_id","url","axios","method","then","res","data","registered","console","log","confirm","catch","err","Register","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setApps","apps","setState","onAppnameChange","e","appname","target","value","onRedirectUrlChange","onButtonClick","slice","getElementById","id","type","onChange","map","app","index","client_secret","Login","onUsernameChange","username","onPasswordChange","password","queryString","MainLogin","components_Login","NotFound","Token","Routes","returnBool","params","ifFalse","blockRender","ifTrue","Switch","build_default","path","exact","component","Route","RouterRoot","BrowserRouter","src_Routes","App","className","src_RouterRoot","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd1f8256.chunk.js","sourcesContent":["function setCookie(cname, cvalue, exdays) {\n    var d = new Date();\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\n    var expires = 'expires=' + d.toGMTString();\n    document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';\n}\n  \nfunction getCookie(cname) {\n    var name = cname + '=';\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return '';\n}\n\nfunction deleteCookie(name) {\n    setCookie(name, 'delete', 0);\n}\n\nconst cookie = {\n    setCookie,\n    getCookie,\n    deleteCookie,\n}\n\nexport default cookie;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport cookie from '../cookie';\n\nclass Home extends React.Component {\n    logout = () => {\n        cookie.deleteCookie('user_id');\n        window.location.href = '/login';\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Sample Service</h1>\n                <h2>This is sample service home page.</h2> \n                <button><Link to='/register'>Register App</Link></button>\n                <button onClick={this.logout}>Logout</button>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport qs from 'query-string';\nimport cookie from '../cookie';\nimport axios from 'axios';\n\nclass Auth extends React.Component {\n    componentWillMount() {\n        const query = qs.parse(window.location.search);\n        if(!query.client_id || !query.state || !query.code || !query.scope || !query.redirect_url) {\n            alert('invalid authorization');\n            return window.location.href = '/notfound';\n        }\n        if(!cookie.getCookie('user_id')) {\n            const forLogin = qs.stringify({\n                client_id: query.client_id,\n                state: query.state,\n                code: query.code,\n                scope: query.scope,\n                redirect_url: query.redirect_url,\n            })\n            alert('please login for authorization');\n            return window.location.href = `/login?${forLogin}`;\n        }\n        const parsed = {\n            client_id: query.client_id,\n            user_id: cookie.getCookie('user_id'),\n            redirect_url: query.redirect_url,\n            scope: query.scope,\n            state: query.state,\n            code: query.code,\n        }\n        const url = `http://localhost:3002/api/auth/register?${qs.stringify(parsed)}`\n        axios({\n            method: 'get',\n            url,\n        })\n        .then(function(res) {\n            if(res.data.registered) {\n                console.log(res.data);\n                return window.location.href = res.data.url;\n            }\n            if(window.confirm('You want to register your account to this App?')) {\n                console.log(res.data);\n                return window.location.href = res.data.url;\n            } else {\n                return window.location.href = '/';\n            }\n        })\n        .catch(function(err) {\n            alert(err);\n            return window.location.href = '/notfound';\n        })\n    }\n\n    render() {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Auth;","import React from 'react';\nimport axios from 'axios';\nimport cookie from '../cookie';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            appname: '',\n            redirect_url: '',\n            apps: [],\n        }\n    }\n\n    componentWillMount() {\n        const setApps = this.setApps;\n        axios({\n            method: 'get',\n            url: 'http://localhost:3002/api/sign/get/app',\n        })\n        .then(function(res) {\n            setApps(res.data.slice());\n        })\n        .catch(function(err) {\n            alert(err);\n        })\n    }\n\n    setApps = (apps) => {\n        this.setState({\n            apps,\n        })\n    }\n\n    onAppnameChange = (e) => {\n        this.setState({\n            appname: e.target.value,\n        })\n    }\n\n    onRedirectUrlChange = (e) => {\n        this.setState({\n            redirect_url: e.target.value,\n        })\n    }\n\n    onButtonClick = () => {\n        const setApps = this.setApps;\n        axios({\n            method: 'post',\n            data: {\n                appname: this.state.appname,\n                redirect_url: this.state.redirect_url,\n                user_id: cookie.getCookie('user_id'),\n            },\n            url: 'http://localhost:3002/api/sign/app'\n        })\n        .then(function(res) {\n            setApps(res.data.slice());\n            alert('App register succeeded.');\n            document.getElementById('appname').value = '';\n            document.getElementById('redirect').value = '';\n        })\n        .catch(function(err) {\n            alert(err);\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Register Your App</h1>\n                <label>App Name</label>\n                <input id='appname' type='text' onChange={this.onAppnameChange} />\n                <br/>\n                <label>Redirect URL</label>\n                <input id='redirect' type='text' onChange={this.onRedirectUrlChange}/>\n                <br/>\n                <button onClick={this.onButtonClick}>Create</button>\n                <hr/>\n                {this.state.apps && this.state.apps.length ? <div><h2>Registered Apps</h2><hr/></div> : <div><h2>No Apps</h2><hr/></div>}\n                {this.state.apps && this.state.apps.length ? this.state.apps.map((app, index) => {\n                    return (\n                        <div>\n                            <h3>Appname : {app.appname}</h3>\n                            <h3>Client ID : {app.client_id}</h3>\n                            <h3>Client Secret : {app.client_secret}</h3>\n                            <hr/>\n                        </div>\n                    )\n                }) : <div></div>}\n            </div>\n        )\n    }\n}\n\nexport default Register;","import React from 'react';\nimport axios from 'axios';\nimport cookie from '../cookie';\nimport queryString from 'query-string';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n        }\n    }\n\n    onUsernameChange = (e) => {\n        this.setState({\n            username: e.target.value,\n        })\n    }\n\n    onPasswordChange = (e) => {\n        this.setState({\n            password: e.target.value,\n        })\n    }\n\n    onButtonClick = () => {\n        const query = queryString.parse(window.location.search);\n        axios({\n            method: 'post',\n            data: {\n                username: this.state.username,\n                password: this.state.password,\n            },\n            url: this.props.url,\n        })\n        .then(function(res) {\n            cookie.setCookie('user_id', res.data, 3);\n            if(query.client_id && query.state && query.redirect_url && query.scope && query.code) {\n                return window.location.href = `/auth?client_id=${query.client_id}&state=${query.state}&scope=${query.scope}&redirect_url=${query.redirect_url}&code=${query.code}`;\n            }\n            window.location.href = '/';\n        })\n        .catch(function(err) {\n            alert(err);\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Login</h1>\n                <label>Username</label>\n                <input type='text' onChange={this.onUsernameChange}/>\n                <br/>\n                <label>Password</label>\n                <input type='password' onChange={this.onPasswordChange}/>\n                <br/>\n                <button onClick={this.onButtonClick}>Login</button>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React from 'react';\nimport Login from './Login.jsx';\n\nclass MainLogin extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>To the Sample Service</h1>\n                <Login url='http://localhost:3002/api/sign/login'/>\n            </div>\n        )\n    }\n}\n\nexport default MainLogin;","import React from 'react';\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>404 Not Found</h1>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport cookie from '../cookie';\nimport axios from 'axios';\nimport qs from 'query-string';\n\nclass Token extends React.Component {\n    componentWillMount() {\n        const query = qs.parse(window.location.search);\n        if(!query.client_id || !query.state || !query.redirect_url || !query.scope || !query.client_secret) {\n            alert('invalid authorization');\n            return window.location.href = '/';\n        }\n        if(!cookie.getCookie('user_id')) {\n            alert('please login for authorization and try again');\n            return window.location.href = '/login';\n        }\n        const parsed = {\n            client_id: query.client_id,\n            user_id: cookie.getCookie('user_id'),\n            state: query.state,\n            redirect_url: query.redirect_url,\n            scope: query.scope,\n            client_secret: query.client_secret,\n        }\n        const url = `http://localhost:3002/api/auth/token?${qs.stringify(parsed)}`\n        axios({\n            method: 'get',\n            url,\n        })\n        .then(function(res) {\n            console.log(res.data);\n        })\n        .catch(function(err) {\n            alert(err);\n        })\n    }\n\n    render() {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Token;","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport NG from 'react-navigation-guard';\nimport cookie from './cookie';\n\nimport Home from './components/Home.jsx';\nimport Auth from './components/Auth.jsx';\nimport Register from './components/Register.jsx';\nimport MainLogin from './components/MainLogin.jsx';\nimport NotFound from './components/NotFound.jsx';\nimport Token from './components/Token.jsx';\n\nclass Routes extends React.Component {\n    returnBool = (url, params) => {\n        if(cookie.getCookie('user_id')) {\n           return true; \n        } else return false;\n    }\n\n    ifFalse = (url, params, blockRender) => {\n        if(url !== '/login') {\n            blockRender();\n            alert('Please login first.');\n            return window.location.href = '/login';\n        }\n    }\n\n    ifTrue = (url, params, blockRender) => {\n        if(url === '/login') {\n            alert('You are already signed in.');\n            return window.location.href = '/';\n        }\n    }\n\n    render() {\n        return (\n            <Switch>\n                <NG path='/' exact={true} component={Home} returnBool={this.returnBool} ifFalse={this.ifFalse} ifTrue={this.ifTrue} />\n                <Route path='/auth' exact component={Auth} />\n                <NG path='/register' exact={true} component={Register} returnBool={this.returnBool} ifFalse={this.ifFalse} ifTrue={this.ifTrue} />\n                <NG path='/login' exact={true} component={MainLogin} returnBool={this.returnBool} ifFalse={this.ifFalse} ifTrue={this.ifTrue} />\n                <NG path='/token' exact={true} component={Token} returnBool={this.returnBool} ifFalse={this.ifFalse} ifTrue={this.ifTrue} />\n                <Route component={NotFound} />\n            </Switch>\n        )\n    }\n}\n\nexport default Routes;","import React from 'react';\nimport Routes from './Routes.jsx';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nclass RouterRoot extends React.Component {\n    render() {\n        return (\n            <Router>\n                <Routes/>\n            </Router>\n        )\n    }\n}\n\nexport default RouterRoot;","import React from 'react';\nimport RouterRoot from './RouterRoot.jsx';\n\nimport './App.css';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className='App'>\n                <RouterRoot/>\n            </div>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}