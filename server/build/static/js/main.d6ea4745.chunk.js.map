{"version":3,"sources":["cookie.js","components/Home.jsx","components/Auth.jsx","components/Register.jsx","components/Login.jsx","components/MainLogin.jsx","components/NotFound.jsx","components/Token.jsx","Routes.jsx","RouterRoot.jsx","App.jsx","serviceWorker.js","index.js"],"names":["setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toGMTString","document","cookie","getCookie","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","deleteCookie","Home","logout","window","location","href","react_default","a","createElement","Link","to","onClick","this","React","Component","Auth","query","qs","parse","search","client_id","state","redirect_url","scope","alert","forLogin","stringify","concat","parsed","user_id","url","axios","method","then","res","console","log","data","catch","err","Register","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setApps","apps","setState","onAppnameChange","e","appname","target","value","onRedirectUrlChange","onButtonClick","slice","getElementById","id","type","onChange","map","app","index","client_secret","Login","onUsernameChange","username","onPasswordChange","password","queryString","confirm","clent_id","MainLogin","components_Login","NotFound","Token","Routes","returnBool","params","ifFalse","blockRender","ifTrue","Switch","build_default","path","exact","component","Route","RouterRoot","BrowserRouter","src_Routes","App","className","src_RouterRoot","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+RAAA,SAASA,EAAUC,EAAOC,EAAQC,GAC9B,IAAIC,EAAI,IAAIC,KACZD,EAAEE,QAAQF,EAAEG,UAAoB,GAAPJ,EAAU,GAAG,GAAG,KACzC,IAAIK,EAAU,WAAaJ,EAAEK,cAC7BC,SAASC,OAASV,EAAQ,IAAMC,EAAS,IAAMM,EAAU,UAuB7D,IAMeG,EANA,CACXX,YACAY,UAtBJ,SAAmBX,GAIf,IAHA,IAAIY,EAAOZ,EAAQ,IAEfa,EADgBC,mBAAmBL,SAASC,QACzBK,MAAM,KACrBC,EAAI,EAAGA,EAAIH,EAAGI,OAAQD,IAAK,CAE/B,IADA,IAAIE,EAAIL,EAAGG,GACY,MAAhBE,EAAEC,OAAO,IACZD,EAAIA,EAAEE,UAAU,GAEpB,GAAwB,IAApBF,EAAEG,QAAQT,GACV,OAAOM,EAAEE,UAAUR,EAAKK,OAAQC,EAAED,QAG1C,MAAO,IAUPK,aAPJ,SAAsBV,GAClBb,EAAUa,EAAM,SAAU,aCFfW,6MAjBXC,OAAS,WACLd,EAAOY,aAAa,WACpBG,OAAOC,SAASC,KAAO,kFAIvB,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,aAAT,iBACRJ,EAAAC,EAAAC,cAAA,UAAQG,QAASC,KAAKV,QAAtB,kBAZGW,IAAMC,6CCiDVC,+LA9CP,IAAMC,EAAQC,IAAGC,MAAMf,OAAOC,SAASe,QACvC,IAAIH,EAAMI,YAAcJ,EAAMK,QAAUL,EAAMM,eAAiBN,EAAMO,MAEjE,OADAC,MAAM,yBACHpC,EAAOC,UAAU,WACTc,OAAOC,SAASC,KAAO,IACpBF,OAAOC,SAASC,KAAO,SAEzC,IAAIjB,EAAOC,UAAU,WAAY,CAC7B,IAAMoC,EAAWR,IAAGS,UAAU,CAC1BN,UAAWJ,EAAMI,UACjBC,MAAOL,EAAMK,MACbC,aAAcN,EAAMM,aACpBC,MAAOP,EAAMO,QAGjB,OADAC,MAAM,kCACCrB,OAAOC,SAASC,KAAhB,UAAAsB,OAAiCF,GAE5C,IAAMG,EAAS,CACXR,UAAWJ,EAAMI,UACjBS,QAASzC,EAAOC,UAAU,WAC1BgC,MAAOL,EAAMK,MACbC,aAAcN,EAAMM,aACpBC,MAAOP,EAAMO,OAEXO,EAAG,sCAAAH,OAAyCV,IAAGS,UAAUE,IAC/DG,IAAM,CACFC,OAAQ,MACRF,QAEHG,KAAK,SAASC,GAEX,OADAC,QAAQC,IAAIF,EAAIG,MACTlC,OAAOC,SAASC,KAAO6B,EAAIG,OAErCC,MAAM,SAASC,GAEZ,OADAf,MAAMe,GACCpC,OAAOC,SAASC,KAAO,uCAKlC,OACIC,EAAAC,EAAAC,cAAA,mBA3COK,IAAMC,WC2FV0B,cA3FX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA4B,IACfE,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAAnC,KAAM6B,KAsBVO,QAAU,SAACC,GACPP,EAAKQ,SAAS,CACVD,UAzBWP,EA6BnBS,gBAAkB,SAACC,GACfV,EAAKQ,SAAS,CACVG,QAASD,EAAEE,OAAOC,SA/BPb,EAmCnBc,oBAAsB,SAACJ,GACnBV,EAAKQ,SAAS,CACV5B,aAAc8B,EAAEE,OAAOC,SArCZb,EAyCnBe,cAAgB,WACZ,IAAMT,EAAUN,EAAKM,QACrBjB,IAAM,CACFC,OAAQ,OACRK,KAAM,CACFgB,QAASX,EAAKrB,MAAMgC,QACpB/B,aAAcoB,EAAKrB,MAAMC,aACzBO,QAASzC,EAAOC,UAAU,YAE9ByC,IAAK,uCAERG,KAAK,SAASC,GACXc,EAAQd,EAAIG,KAAKqB,SACjBlC,MAAM,2BACNrC,SAASwE,eAAe,WAAWJ,MAAQ,GAC3CpE,SAASwE,eAAe,YAAYJ,MAAQ,KAE/CjB,MAAM,SAASC,GACZf,MAAMe,MAzDVG,EAAKrB,MAAQ,CACTgC,QAAS,GACT/B,aAAc,GACd2B,KAAM,IALKP,oFAUf,IAAMM,EAAUpC,KAAKoC,QACrBjB,IAAM,CACFC,OAAQ,MACRF,IAAK,2CAERG,KAAK,SAASC,GACXc,EAAQd,EAAIG,KAAKqB,WAEpBpB,MAAM,SAASC,GACZf,MAAMe,sCA6CV,OACIjC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOoD,GAAG,UAAUC,KAAK,OAAOC,SAAUlD,KAAKuC,kBAC/C7C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOoD,GAAG,WAAWC,KAAK,OAAOC,SAAUlD,KAAK4C,sBAChDlD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQG,QAASC,KAAK6C,eAAtB,UACAnD,EAAAC,EAAAC,cAAA,WACCI,KAAKS,MAAM4B,MAAQrC,KAAKS,MAAM4B,KAAKtD,OAASW,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,6BAAwBF,EAAAC,EAAAC,cAAA,YAAcF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,qBAAgBF,EAAAC,EAAAC,cAAA,YAC5GI,KAAKS,MAAM4B,MAAQrC,KAAKS,MAAM4B,KAAKtD,OAASiB,KAAKS,MAAM4B,KAAKc,IAAI,SAACC,EAAKC,GACnE,OACI3D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBAAewD,EAAIX,SACnB/C,EAAAC,EAAAC,cAAA,yBAAiBwD,EAAI5C,WACrBd,EAAAC,EAAAC,cAAA,6BAAqBwD,EAAIE,eACzB5D,EAAAC,EAAAC,cAAA,cAGPF,EAAAC,EAAAC,cAAA,oBAtFEK,IAAMC,WCiEdqD,cA/DX,SAAAA,EAAY1B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAAuD,IACfzB,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAwB,GAAApB,KAAAnC,KAAM6B,KAOV2B,iBAAmB,SAAChB,GAChBV,EAAKQ,SAAS,CACVmB,SAAUjB,EAAEE,OAAOC,SAVRb,EAcnB4B,iBAAmB,SAAClB,GAChBV,EAAKQ,SAAS,CACVqB,SAAUnB,EAAEE,OAAOC,SAhBRb,EAoBnBe,cAAgB,WACZ,IAAMzC,EAAQwD,IAAYtD,MAAMf,OAAOC,SAASe,QAChDY,IAAM,CACFC,OAAQ,OACRK,KAAM,CACFgC,SAAU3B,EAAKrB,MAAMgD,SACrBE,SAAU7B,EAAKrB,MAAMkD,UAEzBzC,IAAKY,EAAKD,MAAMX,MAEnBG,KAAK,SAASC,GAEX,GADA9C,EAAOX,UAAU,UAAWyD,EAAIG,KAAM,GACnCrB,EAAMI,WAAaJ,EAAMK,OAASL,EAAMM,cAAgBN,EAAMO,MAC7D,OAAGpB,OAAOsE,QAAP,4CAAA9C,OAA2DX,EAAMO,MAAjE,WACQpB,OAAOC,SAASC,KAAhB,mBAAAsB,OAA0CX,EAAM0D,SAAhD,WAAA/C,OAAkEX,EAAMK,MAAxE,WAAAM,OAAuFX,EAAMO,MAA7F,kBAAAI,OAAmHX,EAAMM,eAEhIE,MAAM,qBACCrB,OAAOC,SAASC,KAAO,KAGtCF,OAAOC,SAASC,KAAO,MAE1BiC,MAAM,SAASC,GACZf,MAAMe,MAzCVG,EAAKrB,MAAQ,CACTgD,SAAU,GACVE,SAAU,IAJC7B,wEAgDf,OACIpC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOqD,KAAK,OAAOC,SAAUlD,KAAKwD,mBAClC9D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOqD,KAAK,WAAWC,SAAUlD,KAAK0D,mBACtChE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQG,QAASC,KAAK6C,eAAtB,iBA1DI5C,IAAMC,WCSX6D,mLATP,OACIrE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAACoE,EAAD,CAAO9C,IAAI,iDALHjB,IAAMC,WCSf+D,mLARP,OACIvE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mCAJOK,IAAMC,WC0CdgE,+LArCP,IAAM9D,EAAQC,IAAGC,MAAMf,OAAOC,SAASe,QACvC,IAAIH,EAAMI,YAAcJ,EAAMK,QAAUL,EAAMM,eAAiBN,EAAMO,QAAUP,EAAMkD,cAEjF,OADA1C,MAAM,yBACCrB,OAAOC,SAASC,KAAO,IAElC,IAAIjB,EAAOC,UAAU,WAEjB,OADAmC,MAAM,gDACCrB,OAAOC,SAASC,KAAO,SAElC,IAAMuB,EAAS,CACXR,UAAWJ,EAAMI,UACjBS,QAASzC,EAAOC,UAAU,WAC1BgC,MAAOL,EAAMK,MACbC,aAAcN,EAAMM,aACpBC,MAAOP,EAAMO,MACb2C,cAAelD,EAAMkD,eAEnBpC,EAAG,wCAAAH,OAA2CV,IAAGS,UAAUE,IACjEG,IAAM,CACFC,OAAQ,MACRF,QAEHG,KAAK,SAASC,GACXC,QAAQC,IAAIF,EAAIG,QAEnBC,MAAM,SAASC,GACZf,MAAMe,sCAKV,OACIjC,EAAAC,EAAAC,cAAA,mBAlCQK,IAAMC,WC2CXiE,6MAnCXC,WAAa,SAAClD,EAAKmD,GACf,QAAG7F,EAAOC,UAAU,cAKxB6F,QAAU,SAACpD,EAAKmD,EAAQE,GACpB,GAAW,WAARrD,EAGC,OAFAqD,IACA3D,MAAM,uBACCrB,OAAOC,SAASC,KAAO,YAItC+E,OAAS,SAACtD,EAAKmD,EAAQE,GACnB,GAAW,WAARrD,EAEC,OADAN,MAAM,8BACCrB,OAAOC,SAASC,KAAO,6EAKlC,OACIC,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,KACI/E,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CAAIgF,KAAK,IAAIC,OAAO,EAAMC,UAAWxF,EAAM+E,WAAYpE,KAAKoE,WAAYE,QAAStE,KAAKsE,QAASE,OAAQxE,KAAKwE,SAC5G9E,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOH,KAAK,QAAQC,OAAK,EAACC,UAAW1E,IACrCT,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CAAIgF,KAAK,YAAYC,OAAO,EAAMC,UAAWjD,EAAUwC,WAAYpE,KAAKoE,WAAYE,QAAStE,KAAKsE,QAASE,OAAQxE,KAAKwE,SACxH9E,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CAAIgF,KAAK,SAASC,OAAO,EAAMC,UAAWd,EAAWK,WAAYpE,KAAKoE,WAAYE,QAAStE,KAAKsE,QAASE,OAAQxE,KAAKwE,SACtH9E,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CAAIgF,KAAK,SAASC,OAAO,EAAMC,UAAWX,EAAOE,WAAYpE,KAAKoE,WAAYE,QAAStE,KAAKsE,QAASE,OAAQxE,KAAKwE,SAClH9E,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOD,UAAWZ,YA9BbhE,IAAMC,mBCEZ6E,mLARP,OACIrF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACItF,EAAAC,EAAAC,cAACqF,EAAD,cAJShF,IAAMC,WCWhBgF,0LARP,OACIxF,EAAAC,EAAAC,cAAA,OAAKuF,UAAU,OACXzF,EAAAC,EAAAC,cAACwF,EAAD,cAJEnF,IAAMC,YCOJmF,QACW,cAA7B9F,OAAOC,SAAS8F,UAEe,UAA7B/F,OAAOC,SAAS8F,UAEhB/F,OAAOC,SAAS8F,SAASC,MACvB,2DCZNC,IAASC,OAAO/F,EAAAC,EAAAC,cAAC8F,EAAD,MAASnH,SAASwE,eAAe,SD2H3C,kBAAmB4C,WACrBA,UAAUC,cAAcC,MAAMxE,KAAK,SAAAyE,GACjCA,EAAaC","file":"static/js/main.d6ea4745.chunk.js","sourcesContent":["function setCookie(cname, cvalue, exdays) {\n    var d = new Date();\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\n    var expires = 'expires=' + d.toGMTString();\n    document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';\n}\n  \nfunction getCookie(cname) {\n    var name = cname + '=';\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return '';\n}\n\nfunction deleteCookie(name) {\n    setCookie(name, 'delete', 0);\n}\n\nconst cookie = {\n    setCookie,\n    getCookie,\n    deleteCookie,\n}\n\nexport default cookie;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport cookie from '../cookie';\n\nclass Home extends React.Component {\n    logout = () => {\n        cookie.deleteCookie('user_id');\n        window.location.href = '/login';\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Sample Service</h1>\n                <h2>This is sample service home page.</h2> \n                <button><Link to='/register'>Register App</Link></button>\n                <button onClick={this.logout}>Logout</button>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport qs from 'query-string';\nimport cookie from '../cookie';\nimport axios from 'axios';\n\nclass Auth extends React.Component {\n    componentWillMount() {\n        const query = qs.parse(window.location.search);\n        if(!query.client_id || !query.state || !query.redirect_url || !query.scope) {\n            alert('invalid authorization');\n            if(cookie.getCookie('user_id')) {\n                return window.location.href = '/';\n            } else return window.location.href = '/login';\n        }\n        if(!cookie.getCookie('user_id')) {\n            const forLogin = qs.stringify({\n                client_id: query.client_id,\n                state: query.state,\n                redirect_url: query.redirect_url,\n                scope: query.scope,\n            })\n            alert('please login for authorization');\n            return window.location.href = `/login?${forLogin}`;\n        }\n        const parsed = {\n            client_id: query.client_id,\n            user_id: cookie.getCookie('user_id'),\n            state: query.state,\n            redirect_url: query.redirect_url,\n            scope: query.scope,\n        }\n        const url = `http://localhost:3002/api/auth/app?${qs.stringify(parsed)}`\n        axios({\n            method: 'get',\n            url,\n        })\n        .then(function(res) {\n            console.log(res.data);\n            return window.location.href = res.data;\n        })\n        .catch(function(err) {\n            alert(err);\n            return window.location.href = '/';\n        })\n    }\n\n    render() {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Auth;","import React from 'react';\nimport axios from 'axios';\nimport cookie from '../cookie';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            appname: '',\n            redirect_url: '',\n            apps: [],\n        }\n    }\n\n    componentWillMount() {\n        const setApps = this.setApps;\n        axios({\n            method: 'get',\n            url: 'http://localhost:3002/api/sign/get/app',\n        })\n        .then(function(res) {\n            setApps(res.data.slice());\n        })\n        .catch(function(err) {\n            alert(err);\n        })\n    }\n\n    setApps = (apps) => {\n        this.setState({\n            apps,\n        })\n    }\n\n    onAppnameChange = (e) => {\n        this.setState({\n            appname: e.target.value,\n        })\n    }\n\n    onRedirectUrlChange = (e) => {\n        this.setState({\n            redirect_url: e.target.value,\n        })\n    }\n\n    onButtonClick = () => {\n        const setApps = this.setApps;\n        axios({\n            method: 'post',\n            data: {\n                appname: this.state.appname,\n                redirect_url: this.state.redirect_url,\n                user_id: cookie.getCookie('user_id'),\n            },\n            url: 'http://localhost:3002/api/sign/app'\n        })\n        .then(function(res) {\n            setApps(res.data.slice());\n            alert('App register succeeded.');\n            document.getElementById('appname').value = '';\n            document.getElementById('redirect').value = '';\n        })\n        .catch(function(err) {\n            alert(err);\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Register Your App</h1>\n                <label>App Name</label>\n                <input id='appname' type='text' onChange={this.onAppnameChange} />\n                <br/>\n                <label>Redirect URL</label>\n                <input id='redirect' type='text' onChange={this.onRedirectUrlChange}/>\n                <br/>\n                <button onClick={this.onButtonClick}>Create</button>\n                <hr/>\n                {this.state.apps && this.state.apps.length ? <div><h2>Registered Apps</h2><hr/></div> : <div><h2>No Apps</h2><hr/></div>}\n                {this.state.apps && this.state.apps.length ? this.state.apps.map((app, index) => {\n                    return (\n                        <div>\n                            <h3>Appname : {app.appname}</h3>\n                            <h3>Client ID : {app.client_id}</h3>\n                            <h3>Client Secret : {app.client_secret}</h3>\n                            <hr/>\n                        </div>\n                    )\n                }) : <div></div>}\n            </div>\n        )\n    }\n}\n\nexport default Register;","import React from 'react';\nimport axios from 'axios';\nimport cookie from '../cookie';\nimport queryString from 'query-string';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n        }\n    }\n\n    onUsernameChange = (e) => {\n        this.setState({\n            username: e.target.value,\n        })\n    }\n\n    onPasswordChange = (e) => {\n        this.setState({\n            password: e.target.value,\n        })\n    }\n\n    onButtonClick = () => {\n        const query = queryString.parse(window.location.search);\n        axios({\n            method: 'post',\n            data: {\n                username: this.state.username,\n                password: this.state.password,\n            },\n            url: this.props.url,\n        })\n        .then(function(res) {\n            cookie.setCookie('user_id', res.data, 3);\n            if(query.client_id && query.state && query.redirect_url && query.scope) {\n                if(window.confirm(`Do you allow this app to connect to your ${query.scope} data?`)) {\n                    return window.location.href = `/auth?client_id=${query.clent_id}&state=${query.state}&scope=${query.scope}&redirect_url=${query.redirect_url}`;\n                } else {\n                    alert('back to main page');\n                    return window.location.href = '/';\n                }\n            }\n            window.location.href = '/';\n        })\n        .catch(function(err) {\n            alert(err);\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Login</h1>\n                <label>Username</label>\n                <input type='text' onChange={this.onUsernameChange}/>\n                <br/>\n                <label>Password</label>\n                <input type='password' onChange={this.onPasswordChange}/>\n                <br/>\n                <button onClick={this.onButtonClick}>Login</button>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React from 'react';\nimport Login from './Login.jsx';\n\nclass MainLogin extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>To the Sample Service</h1>\n                <Login url='http://localhost:3002/api/sign/login'/>\n            </div>\n        )\n    }\n}\n\nexport default MainLogin;","import React from 'react';\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>404 Not Found</h1>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport cookie from '../cookie';\nimport axios from 'axios';\nimport qs from 'query-string';\n\nclass Token extends React.Component {\n    componentWillMount() {\n        const query = qs.parse(window.location.search);\n        if(!query.client_id || !query.state || !query.redirect_url || !query.scope || !query.client_secret) {\n            alert('invalid authorization');\n            return window.location.href = '/';\n        }\n        if(!cookie.getCookie('user_id')) {\n            alert('please login for authorization and try again');\n            return window.location.href = '/login';\n        }\n        const parsed = {\n            client_id: query.client_id,\n            user_id: cookie.getCookie('user_id'),\n            state: query.state,\n            redirect_url: query.redirect_url,\n            scope: query.scope,\n            client_secret: query.client_secret,\n        }\n        const url = `http://localhost:3002/api/auth/token?${qs.stringify(parsed)}`\n        axios({\n            method: 'get',\n            url,\n        })\n        .then(function(res) {\n            console.log(res.data);\n        })\n        .catch(function(err) {\n            alert(err);\n        })\n    }\n\n    render() {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Token;","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport NG from 'react-navigation-guard';\nimport cookie from './cookie';\n\nimport Home from './components/Home.jsx';\nimport Auth from './components/Auth.jsx';\nimport Register from './components/Register.jsx';\nimport MainLogin from './components/MainLogin.jsx';\nimport NotFound from './components/NotFound.jsx';\nimport Token from './components/Token.jsx';\n\nclass Routes extends React.Component {\n    returnBool = (url, params) => {\n        if(cookie.getCookie('user_id')) {\n           return true; \n        } else return false;\n    }\n\n    ifFalse = (url, params, blockRender) => {\n        if(url !== '/login') {\n            blockRender();\n            alert('Please login first.');\n            return window.location.href = '/login';\n        }\n    }\n\n    ifTrue = (url, params, blockRender) => {\n        if(url === '/login') {\n            alert('You are already signed in.');\n            return window.location.href = '/';\n        }\n    }\n\n    render() {\n        return (\n            <Switch>\n                <NG path='/' exact={true} component={Home} returnBool={this.returnBool} ifFalse={this.ifFalse} ifTrue={this.ifTrue} />\n                <Route path='/auth' exact component={Auth} />\n                <NG path='/register' exact={true} component={Register} returnBool={this.returnBool} ifFalse={this.ifFalse} ifTrue={this.ifTrue} />\n                <NG path='/login' exact={true} component={MainLogin} returnBool={this.returnBool} ifFalse={this.ifFalse} ifTrue={this.ifTrue} />\n                <NG path='/token' exact={true} component={Token} returnBool={this.returnBool} ifFalse={this.ifFalse} ifTrue={this.ifTrue} />\n                <Route component={NotFound} />\n            </Switch>\n        )\n    }\n}\n\nexport default Routes;","import React from 'react';\nimport Routes from './Routes.jsx';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nclass RouterRoot extends React.Component {\n    render() {\n        return (\n            <Router>\n                <Routes/>\n            </Router>\n        )\n    }\n}\n\nexport default RouterRoot;","import React from 'react';\nimport RouterRoot from './RouterRoot.jsx';\n\nimport './App.css';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className='App'>\n                <RouterRoot/>\n            </div>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}